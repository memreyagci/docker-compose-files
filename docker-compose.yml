version: "3.3"

services:
  traefik:
    image: traefik:v2.5
    container_name: "traefik"
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "443:443"
    volumes:
      - "letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  baikal:
    image: ckulka/baikal:latest
    container_name: "baikal"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.baikal.rule=Host(`${BAIKAL_DOMAIN}`)"
      - "traefik.http.routers.baikal.entrypoints=websecure"
      - "traefik.http.routers.baikal.tls.certresolver=myresolver"
    volumes:
      - baikal_config:/var/www/baikal/config
      - baikal_data:/var/www/baikal/Specific
    restart: unless-stopped

  ghost:
    image: ghost
    container_name: "ghost-root"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ghost.rule=Host(`${GHOST_DOMAIN}`)"
      - "traefik.http.routers.ghost.entrypoints=websecure"
      - "traefik.http.routers.ghost.tls.certresolver=myresolver"
    volumes:
      - ghost:/var/lib/ghost/content
    environment:
      url: "${GHOST_DOMAIN}"
    restart: unless-stopped

  vaultwarden:
    image: vaultwarden/server:latest
    container_name: "vaultwarden"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vaultwarden.rule=Host(`${VAULTWARDEN_DOMAIN}`)"
      - "traefik.http.routers.vaultwarden.entrypoints=websecure"
      - "traefik.http.routers.vaultwarden.tls.certresolver=myresolver"
    volumes:
      - vaultwarden:/data/
    environment:
      ADMIN_TOKEN: ${VAULTWARDEN_ADMIN_TOKEN}
    restart: unless-stopped

  turtl-server:
    build:
      context: ./turtl
    container_name: "turtl-server"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.turtl-server.rule=Host(`${TURTL_DOMAIN}`)"
      - "traefik.http.routers.turtl-server.entrypoints=websecure"
      - "traefik.http.routers.turtl-server.tls.certresolver=myresolver"
    environment:
      TURTL_DB_HOST: postgres-db
      TURTL_DB_PORT: 5432
      TURTL_DB_DATABASE: turtl
      TURTL_DB_USER: turtl
      TURTL_DB_PASSWORD: ${TURTL_DB_PASSWORD}
      TURTL_APP_SECURE_HASH_SALT: ${TURTL_APP_SECURE_HASH_SALT}
      TURTL_APP_API_URL: ${TURTL_DOMAIN}
    depends_on:
      postgres-db:
        condition: service_healthy

  postgres-db:
    image: postgres:11-alpine
    container_name: "turtle-db"
    environment:
      POSTGRES_PASSWORD: ${TURTL_DB_PASSWORD}
      POSTGRES_USER: turtl
      POSTGRES_DB: turtl
    volumes:
      - turtl:/var/lib/postgresql/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U turtl"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  baikal_config:
    name: "baikal_config"
  baikal_data:
    name: "baikal_data"
  ghost:
    name: "ghost"
  letsencrypt:
    name: "letsencrypt"
  turtl:
    name: "turtl"
  vaultwarden:
    name: "vaultwarden"
